package com.evento.web.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.evento.persistence.entities.Evento;
import com.evento.services.EventoService;
import com.evento.services.exceptions.EventoException;
import com.evento.services.exceptions.EventoNotFoundException;

@RestController
@RequestMapping("/evento")
public class EventoControllers {
	
	@Autowired
	private EventoService eventoService;

	//Obtener todos los eventos
	@GetMapping
	public ResponseEntity<?> findAll(){
		return ResponseEntity.ok(this.eventoService.findAll());
	}
	
	//Obtener un evento por ID
	@GetMapping("/{idEvento}")
	public ResponseEntity<?> findById(@PathVariable int idEvento){
		try {
			return ResponseEntity.ok(this.eventoService.findById(idEvento));
		}catch(EventoNotFoundException ex) {
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body(ex.getMessage());
		}
	}
	
	//Crear un evento
	@PostMapping
	public ResponseEntity<?> create(@RequestBody Evento evento){
		try {
			return ResponseEntity.status(HttpStatus.CREATED).body(this.eventoService.create(evento));
		}catch(EventoException ex) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ex.getMessage());
		}
	}
	
	
	
	
				
}
